GraphQL is a query language to fetch data from APIs. GraphQL is developed by Facebook as an alternate of REST APIs. GraphQL solves some of the issues which arise when REST APIs evolves and scale.
Netflix created Domain Graph Service Framework (DGS) 

REST vs GraphQL
Any REST endpoint generally returns a response in JSON in specific format. You either get a full JSON response or nothing at all. GraphQL provides ability to query API and get exactly what you need, nothing more and nothing less.
Any REST endpoint generally returns a response of specific Domain. Sometime clients need to call multiple REST endpoint to collect data. GraphQL provides ability to collect data in a single query.
You perform CRUD operations in REST using different HTTP verbs (GET, POST, PUT, DELETE etc.) whereas CRUD operations in GraphQL is performed using Query (or Mutation). Clients query the GraphQL API by making an HTTP POST request with Query (or Mutation) as Request Body.

H2 db url: http://localhost:9010/finance-console
service url: http://localhost:9010/graphiql

Reference: https://medium.com/geekculture/graphql-server-with-netflix-dgs-and-spring-boot-2b2f1b42d163
complex query reference: https://piotrminkowski.com/2021/04/08/an-advanced-graphql-with-spring-boot-and-netflix-dgs/

// query by id 1 
{
  customerById (customerId: "1") {
    name
  }
}
// query by id 1 with different response elements 
{
  customerById (customerId: "1") {
    customerNumber
    name
    contact
    accounts {
      accountId
      accountNumber
      accountStatus
      accountBalance
    }
  }
}

//2nd query
{
  customers {
    customerNumber
  }
}
//2nd query in different form
CustomerQuery {
   customers {
      customerNumber 
	  name
	  mail
	  accounts {
		accountStatus
		accountBalance
	  }
   }
}

//create query
mutation {
  createCustomer ( customerInput: {
	name: "Suresh"
	gender: "M"
	contact: 221322
	mail: "test@gmail.com"
	accounts: [{
		accountNumber: 111
		accountStatus: Active
		accountBalance: 1000.00
		},
		{
		accountNumber: 222
		accountStatus: Inactive
		accountBalance: 500.00
	}]
  }) 
  {
    name
    customerNumber
    mail
  }
}